#!/bin/bash

# Stop on errors
set -e -u -o pipefail

# Check input parameters
if [[ "$#" -lt 1 || "$1" == "--help" || "$1" == "-h" ]]; then
    echo "Usage: $(basename "$0") <device> [<subvolume>...]" 1>&2
    exit 1
fi

# Check for root user
if [[ ${EUID} -ne 0 ]]; then
  echo "Error: You must be a root user" 2>&1
  exit 1
fi

# Check input param count
if [ "$#" -eq 1 ]; then
    read -rp "Warning: No extra subvolume specified. Do you really want to continue [Y/n]?" yesno
    if [[ "${yesno}" != [Yy]"es" && "${yesno}" != [Yy] && -n "${yesno}" ]]; then
        echo "Aborted by user"
        exit 0
    fi
fi

# Params
BTRFS_BLOCKDEVICE=$1
shift

# Create btrfs
if ! mkfs.btrfs ${BTRFS_BLOCKDEVICE}; then
    read -rp "Force overwrite [Y/n]?" yesno
    if [[ "${yesno}" != [Yy]"es" && "${yesno}" != [Yy] && -n "${yesno}" ]]; then
        echo "Aborted by user"
        exit 0
    fi
    mkfs.btrfs -f ${BTRFS_BLOCKDEVICE}
fi

# Mount btrfs
MOUNT=/run/media/snap-tools-$(blkid ${BTRFS_BLOCKDEVICE} -o value -s UUID)
mkdir -p ${MOUNT}
mount ${BTRFS_BLOCKDEVICE} ${MOUNT}
chmod 700 ${MOUNT}

# Create structure subvolumes
btrfs subvolume create ${MOUNT}/subvolumes
btrfs subvolume create ${MOUNT}/snapshots
btrfs subvolume create ${MOUNT}/backup
btrfs subvolume create ${MOUNT}/excludes

# Create top level subvolumes
btrfs subvolume create ${MOUNT}/subvolumes/root
btrfs subvolume create ${MOUNT}/snapshots/root
for subvol in "$@"; do
    [ "${subvol}" == "root" ] && continue
    btrfs subvolume create ${MOUNT}/subvolumes/${subvol}
    btrfs subvolume create ${MOUNT}/snapshots/${subvol}
done

# Create subvolumes untracked by snapper
btrfs subvolume create ${MOUNT}/excludes/pkg
btrfs subvolume create ${MOUNT}/excludes/abs
btrfs subvolume create ${MOUNT}/excludes/tmp
btrfs subvolume create ${MOUNT}/excludes/log
btrfs subvolume create ${MOUNT}/excludes/srv

umount -R ${MOUNT}
